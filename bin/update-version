#!/bin/bash
#

set -o errexit

function usage { echo "Usage: $(basename $0) VERSION"; }

declare -r version="$1"
declare -r project=$(project-dir)

[[ -z "$version" ]] && usage && die


if [[ -x poly-devel/update-version.sh ]]; then
    poly-devel/update-version.sh "$version"

elif is-grails3; then
    sed -i "s|^version \"$(regex-version)\"|version \"$version\"|" build.gradle

elif is-grails-project; then
    properties-set application.properties app.version $version

elif is-grails-plugin; then
    variable-set $(grails-find-plugin-descriptor) version "'$version'"

elif is-playframework-lt23; then
    variable-set project/Build.scala appVersion "\"$version\""

elif is-playframework-ge23; then
    sed -i "s|version := \"$(regex-version)\"|version := \"$version\"|" build.sbt

elif is-sbt; then
    sed -i "s|version\(\s*\):= \"$(regex-version)\"|version\1:= \"$version\"|" build.sbt

elif is-gradle; then
    properties-set build.gradle version "'$version'"

elif is-leiningen; then
    sed -i "1 s|\"$(regex-version)\"|\"${version}\"|" project.clj

elif is-sphinx; then
    properties-set source/conf.py version "'$version'"
    properties-set source/conf.py release "'$version'"

else
    fail "How to update version in: $project?"
fi

exit 0
